태그 종류 :
<html>
    <head>
        <title>
        <meta>
    //여기까진 어짜피 ! + enter를 이용해 vscode로 자동완성 가능
    <body>
<h1~h6> 글자크기, 중요도에 따라 사용
<p> : paragraph 다락형태의 글 (println)
<br> : 줄넘김("\n")
<img scr="../as.jph"> : 이미지
<ul> : unordered list : 점
<ol> : ordered list : 숫자
<li> : list item 
<a href = "https://www.naver.com> : 하이퍼링크, 주소가 아닌 class 등으로 위치도 이동 가능
<audio> : 오디오
<video> : 비디오
<!-- : 주석
블락 : 한줄 다 먹음
인라인 : 줄넘기지 않고 사용 (크기 조절 불가)
인라인블럭 : 줄넘기지 않으며 크기 고정

블락 : <p>, <div>, <h>, <li>
인라인 : <a>, <img>, <span>

display속성을 통해 바꿀 수 있다.
-->
<table> > thead, tbody, tfoot > tr > th, tbody
->순서 지켜서 사용할 것
-> colspan / rowspan을 통해 두개 합치기 가능

<input> -> type="text || password || radio || checkbox || file || button || reset || submit || hidden"
        select
        textarea




ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
css : 
태그 선택자 : h2{}
class 선택자 : .m5{}
id 선택자 : #m4{}
class=m5밑에 li에 적용 : ul.m5 > li{}

그외의 속성들
margin: 2px;
padding: 2px;
box-sizing:border-box;
font-size: 75px;
text-align: center;
color:blue;(글씨 색)
border-radius : 30%;
width : 700px;
height : 700px;
float : left;(공중에 띄우기)
clear : both;

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
java script
변수 명 : var, let, const
둘다 호이스팅 과정을 거친다 
-> 컴파일 시 변수를 위쪽을 끌어올려 밑에서 선언한 변수도 위에서 사용가능
그러나 문제점이 생기는데->특정 지역에서만 사용하고 싶은 변수들을 다른 지역에서도 사용하게됨
예시 : for문에서 선언한 var i가 for문 밖에서도 인식됨

->해결을 위해 let을 만듬
let은 호이스팅을 거치나 순서를 적용하여 선언 당시보다 위에는 사용하지 못하게 막음
정확히는 초기화를 해야 변수를 사용할 수 있음

const는 let에서 초기화 값에서 변화가 불가능한 변수는
var를 지양하고, let과 const를 지향하자.

변수 내용을 문자열 안에서 사용하려면 문자열을 ``로 감싸고, ${변수명} 사용

<script>
        let addE1= document.querySelector("#addBtn");
        console.dir(addE1);

        function addDiv(){
            alert(1);
        }
</script>

document.querySelector를 사용해서 특정 class나 id가 선택되었을 때를 변수에 저장한 뒤
사용하거나 / 함수를 선언하고 onclick=함수()를 통해 사용가능

exam03, exam03-2를 통해 함수를 호출하는 방법에 대한 이야기가 있음. 참고 필요 -> 함수명만을 쓰면 함수의 주소를 실행 / 이벤트 리스너를 사용하면 함수 두개 동시에 실행 가능 등의 내용 참고



html,css는 결국 태그에 얼마나 적응하냐의 차이라고 생각하게 됐음.
두 개를 구분할 필요가 없고 결국 함께 사용해야함.


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
느낀점 : 내가 생각하는 computer science의 논리적인 무언가가 아닌, html과 css의 숙련도가 중요한 작업이라는 생각이 들었음.
백앤드를 해보지는 않았지만, html과 css를 내가 좋아하게 되기는 힘들 것으로 보임.

툴 의존이 너무 크다.
내가 c++에서 해왔던 것들을 java를 통해 하기 위해서는 물론 라이브러리, 문법 등의 툴의 적응이 필요하지만, 그렇다고 논리가 어디 가지는 않는다.
그러나 html, css를 잘쓰는 것은 툴에 의존이 커보인다. 물론 이런것들을 잘 쓰는사람이 안드로이드나 c#의 프론트엔드를 하려고 하면 훨씬 빠르게 적응하겠지만, 
그래도 백엔드나 알고리즘 등에 비해 툴에 의존이 더 커보인다.
내 성향상 좋아 보이지는 않는다.

