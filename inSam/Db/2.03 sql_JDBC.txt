개발자  < -- >  JDBC ( Java DataBase Connectivity )  <  -- > MySql 드라이버 < -- > MySql

->> 개발자는 API를 통해 JDBC를 사용하면 JAVA로 MySql을 조작할 수 있다.

JDBC
	자바 프로그래밍 언어로 만들어진 클래스와 인터페이스로 이루어진 API
	SQL문을 실행할 수 있는 함수 호출 인터페이스

특징
	DBMS 종류에 독립적인 자바 활용
	DB가 달라도 동일한 API 사용 가능 ( 드라이버 및 URL만 수정 가능 )
	자바가 가지는 플랫폼 독립적이라는 특성과 DBMS에 독립적

기능
	데이터베이스에 연결 설정
	SQL문장을 DBMS에 전송
	SQL문장 전송 후 결과를 처리 -> SELECT -> 내용 / Insert,Update,Delete -> int (몇줄을 변화시켰는지)
	
JDBC Interface
	데이터베이스를 만드는 업체에서 제공되는 인터페이스
		->업체에서 제공되는 인터페이스를 각각의 DBMS업체들이 구현해 놓은 것으로서 == 드라이버
	프로그러머에게 제공되는 인터페이스
		-> SQL패키지가 제공하고 있는 라이브러리로서 프로그래머는 이 라이브러리를 기반으로 DB 프로그램 작성


jar파일(압축)로 만들어서 전달

	1. 드라이버 로딩 ( 처음에 한번 )
	2. connection ( url, port, databaseName, id, pw ) 
	3. statement에 sql을 만들어서 실행
	4. ResultSet을 반환받음
	5. ResultSet을 가지고 데이터를 뽑아냄


	Driver (interface)
		: 드라이버에 대한 정보를 가지고 있어야 함
		: 모든 드라이버가 반드시 구현해야 하는 인터페이스( 벤더사 에서 )
		: 드라이버의 버전이나 연결에 대한 정보를 알고있는 메소드를 가지고 있다.

	Connection ( interface )
		: 데이터베이스에 대한 세션 -> 끊지 않으면 db최대 연결 개수가 있어서 다른 클라이언트 연결 불가능
		: DriverManager 클래스의 getConnection() 메소드를 통해 얻음
		: 디폴트로 setAutoCommit(true)로 설정
		: transaction을 통해 commit이나 rollback을 하기솦으면 setAutoCommit(false) but commit을 명시적으로 해야함

	Statement ( interface )
		: SQL문장을 실행하고 결과 값을 가져옴
		: execute(String sql) 메소드를 통해 사용
			executeBatch() 스트링버퍼처럼 모아놨다가 한번에 배출
			execute() 하나하나 
			executeUpdate() insert,update,delete 쓸때 사용하면 몇개바꼈는지 
		-> 실행할때마다 SQL을 던짐	
	
	PreparedStatement
		: 동일한 SQL문이 여러 번 반복적으로 수행될 때
		: 대용량의 문자, 바이너리 타입
		: SQL문장을 미리 컴파일 하고 PreparedStatement 객체에 저장
		: 주로 DML (DELETE, UPDATE, INSERT)등의 SQL을 수행할 때 사용	
		-> 차이점 : 치환변수 ?를 통해 쿼리를 다르게 수행 가능
		-> 실행할때는 인자 안받음 -> Connection에서 생성할때 sql인자를 받음

	==> Statement는 실행할때 sql을 인자로 받아서 던진다.
	==> preparedStatement는 생성자에서 sql을 받아서 sql문을 가지고 있는다.



JDBC API
	CallableStatement
		: 데이터베이스에 대하여 실제 SQL을 실행하는 것이 아니라 Stored procedures를 호출 => 함수를 만들어서 실행
		=> call 함수를 호출
	


	 ResultSet 
		: 쿼리에 대한 결과 값 처리
		: get()메소드를 통해 데이터를 얻을 수 있음



JDBC 개발 순서
1. 드라이버 로딩
2. CONNECTION으로 연결
3. SQL 문준비 (STATEMENT, PREPAREDSTATEMENT 생성) + 쿼리 문자열 준비
4. SQL 실행
5. 연결 끊기































